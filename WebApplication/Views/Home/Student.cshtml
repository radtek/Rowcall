@model WebApplication.Models.HomeViewModels.StudentViewModel
@{
    ViewData["Title"] = "About";
}

<div class="row">
    <div class="col-md-offset-3 col-md-6">
        <form style="padding-top: 15vh;" asp-controller="Home" asp-action="Student" method="post">
            <h2 class="text-center">Student login</h2>
            <br /><br />
            <div class="form-group">
                <label for="exampleInputEmail1">Email address</label>
                <input type="email" class="form-control" id="exampleInputEmail1" asp-for="Email"  placeholder="Email">
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Password</label>
                <input type="password" class="form-control" id="exampleInputPassword1" asp-for="Password" placeholder="Password">
            </div>
            <div class="form-group">
                <label for="token">Token</label>
                <input type="text" asp-for="Token" class="form-control" id="token" placeholder="Token from teacher">
            </div>
            <input type="hidden" value="" asp-for="Longitude" id="longitude" name="longitude" />
            <input type="hidden" value="" asp-for="Latitude" id="latitude" name="latitude" />
            <button type="submit" class="btn btn-default">Submit</button>
        </form>
    </div>
</div>

<script>
    var x = document.getElementById("longitude");
    var y = document.getElementById("latitude");
    function getLocation() {
        console.log("Method runned");
        if (navigator.geolocation) {
            console.log("Should set the location")
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            console.log("Didnt set location")
        }
    }
    function showPosition(position) {
        x.value = position.coords.latitude;
        y.value = position.coords.longitude;
    }
    getLocation()
</script>
